@model AdminX.ViewModels.ReviewVM

@{
    ViewData["Title"] = "Admin-X - Reviews";
    ViewData["Page"] = "/ Reviews / Review List";
    ViewData["HomeBtn"] = Html.ActionLink("Home", "Index", "Home", new { }, new { @class = "btn btn-primary m-1" });
}


<div class="card">
    <div class="card-header">
        <h5 class="card-title">Outstanding Reviews</h5>

    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-bordered p-2 table-hover" id="reviewsTable">
                <thead class="table-dark">
                    <tr>
                        <th data-name="ReviewID"></th>
                        <th data-name="CGU_No">CGU No</th>
                        <th data-name="Patient">Patient</th>
                        <th data-name="Category">Category</th>
                        <th data-name="Planned_Date">@Html.DisplayNameFor(model => model.review.Planned_Date)</th>
                        <th data-name="Owner">Owner/Requester</th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>

    </div>

</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('#reviewsTable').DataTable({
                "processing": true,
                "serverSide": true,
                "ajax": {
                    "url": "/Review/GetReviews",
                    "type": "POST",
                    "datatype": "json"
                },
                "columns": [
                    {
                        "data": "reviewID", "name": "ReviewID", "autoWidth": true,
                        "render": function (data, type, row) {
                            return '<a href="/Review/Edit?id=' + data + '" class="btn btn-lg btn-outline-primary">Edit</a>';
                        }
                    },
                    { "data": "cgU_No", "name": "CGU_No", "autoWidth": true },
                    {
                        "data": null, "name": "Patient", "autoWidth": true,
                        "render": function (data, type, row) {
                            return row.firstname + " " + row.lastname;
                        }
                    },
                    { "data": "category", "name": "Category", "autoWidth": true },
                    {
                        "data": "planned_Date", "name": "Planned_Date", "autoWidth": true,
                        "render": function (data) {
                            return data ? new Date(data).toLocaleDateString('en-GB') : 'N/A';
                        }
                    },
                    { "data": "owner", "name": "Owner", "autoWidth": true }
                ]

            });
        });
    </script>
}